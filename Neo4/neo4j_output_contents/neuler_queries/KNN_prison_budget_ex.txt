# K-Nearest Neighbors (prison_budget)

:use neo4j;
Copy
:param limit => ( 50);
:param graphConfig => ({
  nodeProjection: 'State',
  relationshipProjection: {
    relType: {
      type: '*',
      orientation: 'NATURAL',
      properties: {}
    }
  },
  nodeProperties: [
    'prison_budget'
  ]
});
:param config => ({
  nodeWeightProperty: 'prison_budget',
  topK: 50,
  randomJoins: 10,
  sampleRate: 0.5,
  deltaThreshold: 0.001
});
:param communityNodeLimit => ( 10);
:param generatedName => ('in-memory-graph-1654595565524');
Copy
CALL gds.graph.create($generatedName, $graphConfig.nodeProjection, $graphConfig.relationshipProjection, {nodeProperties: ["prison_budget"]});
Copy
CALL gds.beta.knn.stream($generatedName, $config)
YIELD node1, node2, similarity
WITH node1, collect({node: gds.util.asNode(node2), similarity: similarity}) AS to
RETURN gds.util.asNode(node1) AS from, to
LIMIT toInteger($limit);
Copy
CALL gds.graph.drop($generatedName);